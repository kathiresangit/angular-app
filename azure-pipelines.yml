# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
# container registry service connection
dockerRegistryServiceConnection : 'azuretest-acr-connection'
imageRepository : 'angular-app-angularclient-app'
containerRegistry : 'azuretest.azureco.io'
dockerfilepath : '$(Build.SourcesDirectory)/Dockerfile'
tag : '$(Build.BuildId)'

# Agent vm image name: 
vmImageName : 'ubuntu-latest'

stages:
- stage: Dev_Environment
  displayname : Print params, Test, Build and Push Stage
  jobs:
  # Print all the parameters
  - job: Print_Parameters
  displayName: Print Parameters
  pool:
  vmImage : $(vmImageName)
  steps:
  
  - task: Bash@3
  inputs :
  targetType: 'inLine'
  script : |
   echo 'Print All Parameters:'
   echo 'Service Connection:'$(dockerRegistryServiceConnection)
   echo 'Image Repository:'$(imageRepository)
   echo 'Azure container Registry:'$(containerRegistry)
   echo 'docker filepath:'$(dockerfilepath)
   echo 'Build Id: ' $(tag)
   echo 'VM Image Name : ' $(vmImageName)

# Run npm install and npm test
  -job: Application_Tests
   displayName :Npm Install and Npm Test
   dependsOn :Print_Parameters
pool:
 vmImage : $(vmImageName)
steps:

- task : Npm@1
  inputs :
   command: 'install'
   workingDir: '$(Build.SourcesDirectory)'

- task :Npm@1
inputs:
command: 'install'
workingDir: '$(Build.SourcesDirectory)'


  # Build an image from Dockerfile and push it to the Azure Container Registry
-job: Build
 displayName :Build
 dependsOn :Application_Tests
 
pool:
 vmImage : $(vmImageName)
steps:
- task: Docker@2
displayName: Build and push the image to the Azure Container Registry
inputs:
 command: buildAndPush
 repository: $(imageRepository)
 dockerfile: $(dockerfilepath)
 containerRegistry: $(dockerRegistryServiceConnection)
 tags: |
  $(tag)
  latest
 
 -task : PublishBuildArtifacts@1
 inputs:
  PathtoPublish : '$(System.DefaultWorkingDirectory)/deployment/'
  ArtifactName : 'angular-app-artifact'
  publishLocation : 'Container'












   
  







  






  
